//
// Generated by JSON2Apex https://superfell.com/json2apex
//

public class QBOEventNotification {
  public List<EventNotifications> eventNotifications { get; set; }

  public QBOEventNotification(JSONParser parser) {
    while (parser.nextToken() != System.JSONToken.END_OBJECT) {
      if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
        String text = parser.getText();
        if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
          if (text == 'eventNotifications') {
            eventNotifications = arrayOfEventNotifications(parser);
          } else {
            System.debug(LoggingLevel.WARN, 'QBOEventNotification consuming unrecognized property: ' + text);
            consumeObject(parser);
          }
        }
      }
    }
  }

  public class EventNotifications {
    public String realmId { get; set; }
    public DataChangeEvent dataChangeEvent { get; set; }

    public EventNotifications(JSONParser parser) {
      while (parser.nextToken() != System.JSONToken.END_OBJECT) {
        if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
          String text = parser.getText();
          if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
            if (text == 'realmId') {
              realmId = parser.getText();
            } else if (text == 'dataChangeEvent') {
              dataChangeEvent = new DataChangeEvent(parser);
            } else {
              System.debug(LoggingLevel.WARN, 'EventNotifications consuming unrecognized property: ' + text);
              consumeObject(parser);
            }
          }
        }
      }
    }
  }

  public class DataChangeEvent {
    public List<Entities> entities { get; set; }

    public DataChangeEvent(JSONParser parser) {
      while (parser.nextToken() != System.JSONToken.END_OBJECT) {
        if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
          String text = parser.getText();
          if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
            if (text == 'entities') {
              entities = arrayOfEntities(parser);
            } else {
              System.debug(LoggingLevel.WARN, 'DataChangeEvent consuming unrecognized property: ' + text);
              consumeObject(parser);
            }
          }
        }
      }
    }
  }
  public class Entities {
    public String name { get; set; }
    public String id { get; set; }
    public String operation { get; set; }
    public String lastUpdated { get; set; }
    public String deletedID { get; set; }

    public Entities(JSONParser parser) {
      while (parser.nextToken() != System.JSONToken.END_OBJECT) {
        if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
          String text = parser.getText();
          if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
            if (text == 'name') {
              name = parser.getText();
            } else if (text == 'id') {
              id = parser.getText();
            } else if (text == 'operation') {
              operation = parser.getText();
            } else if (text == 'lastUpdated') {
              lastUpdated = parser.getText();
            } else if (text == 'deletedID') {
              deletedID = parser.getText();
            } else {
              System.debug(LoggingLevel.WARN, 'Entities consuming unrecognized property: ' + text);
              consumeObject(parser);
            }
          }
        }
      }
    }
  }

  public static QBOEventNotification parse(String json) {
    System.JSONParser parser = System.JSON.createParser(json);
    return new QBOEventNotification(parser);
  }

  public static void consumeObject(System.JSONParser parser) {
    Integer depth = 0;
    do {
      System.JSONToken curr = parser.getCurrentToken();
      if (curr == System.JSONToken.START_OBJECT || curr == System.JSONToken.START_ARRAY) {
        depth++;
      } else if (curr == System.JSONToken.END_OBJECT || curr == System.JSONToken.END_ARRAY) {
        depth--;
      }
    } while (depth > 0 && parser.nextToken() != null);
  }

  private static List<EventNotifications> arrayOfEventNotifications(System.JSONParser p) {
    List<EventNotifications> res = new List<EventNotifications>();
    if (p.getCurrentToken() == null)
      p.nextToken();
    while (p.nextToken() != System.JSONToken.END_ARRAY) {
      res.add(new EventNotifications(p));
    }
    return res;
  }

  private static List<Entities> arrayOfEntities(System.JSONParser p) {
    List<Entities> res = new List<Entities>();
    if (p.getCurrentToken() == null)
      p.nextToken();
    while (p.nextToken() != System.JSONToken.END_ARRAY) {
      res.add(new Entities(p));
    }
    return res;
  }
}